#!/bin/bash

# Requires jq

# Made by Elizabeth Swann
# Tool to display crypto prices
# Updated from KrakenPrice to remove unnecessary variables and to work with wayland
# Requires monitor file in /home/.config/environment that returns 1 or 0

# Usage: ./krakenprice -m <PAIR> <PAIRKEY>
# -m,  stop requests when the monitor turns off

# You'll need to get the pair key from Kraken's website
# https://docs.kraken.com/api/docs/rest-api/get-ticker-information/

while getopts ":m" opt; do
  case $opt in
    m)
      m=true
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

shift $((OPTIND - 1))

if [ -z "$2" ] || [ "${#1}" -ne 6 ]; then
  echo "Usage: $0 [-m] <pair> <PAIRKEY>"
  echo "The pair should be a six-letter string."
  exit 1
fi

if [ "$m" = true ]; then
  if [ $(cat ~/.config/environment/monitor) == "1" ]; then # 1 Monitor OFF
    echo "OFF"
    exit 1
  fi
fi

if [ $? -ne 0 ]; then
  echo "Failed to retrieve data from the Kraken API."
  exit 1
fi

r=$(curl -sL "https://api.kraken.com/0/public/Ticker?pair=$1" -H 'Accept: application/json')
error=$(echo "$r" | jq --arg k "$2" '.error[]')

if [ "$error" == "EAPI:Rate limit exceeded" ]; then
  echo "Rate limit exceeded. Please try again later."
  exit 1
elif [ "$error" == "EService: Throttled"* ]; then
  timestamp=$(echo "$error" | cut -d: -f3)
  echo "Too many concurrent requests. Try again after $timestamp."
  exit 1
fi

if [ $? -ne 0 ]; then
  echo "Failed to extract the required value from the JSON response."
  exit 1
fi

echo $(echo "$r" | jq --arg k "$2" '.result[$k].b[0]' | xargs printf "%.2f\n")
exit 0