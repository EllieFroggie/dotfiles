#!/bin/bash

# Requires bc
# Requires jq

# Made by Elizabeth Swann
# Tool to display crypto prices in i3bar
# Usage: ./krakenprice -m <PAIR> <PAIRKEY>
# -m,  stop requests when the monitor turns off

# You'll need to get the pair key from Kraken's website
# https://docs.kraken.com/api/docs/rest-api/get-ticker-information/

while getopts ":m" opt; do
  case $opt in
    m)
      m=true
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
  esac
done

shift $((OPTIND - 1))

if [ -z "$2" ] || [ "${#1}" -ne 6 ]; then
  echo "Usage: $0 [-m] <pair> <PAIRKEY>"
  echo "The pair should be a six-letter string."
  exit 1
fi

if [ "$m" = true ]; then
  if [ "$(xset q | grep -E "DPMS is" | awk '{print  $3}')" = "Disabled" ]; then
    echo "DPMSerr"
    exit 1
  else
    if [ "$(xset -display :0 q | grep -E 'Monitor is' | awk '{print $3}')" = "Off" ]; then
    echo "OFF"
    exit 1
    fi
  fi
fi

p="$1"
k="$2"
r=$(curl -sL "https://api.kraken.com/0/public/Ticker?pair=$p" -H 'Accept: application/json')

if [ $? -ne 0 ]; then
  echo "Failed to retrieve data from the Kraken API."
  exit 1
fi

error=$(echo "$r" | jq --arg k "$k" '.error[]')
rate_limit_error='EAPI:Rate limit exceeded'
throttled_error='EService: Throttled'

if [ "$error" == "$rate_limit_error" ]; then
  echo "Rate limit exceeded. Please try again later."
  exit 1
elif [ "$error" == "${throttled_error}:"* ]; then
  timestamp=$(echo "$error" | cut -d: -f3)
  echo "Too many concurrent requests. Try again after $timestamp."
  exit 1
fi

c=$(echo "$r" | jq --arg k "$k" '.result[$k].b[0]')

if [ $? -ne 0 ]; then
  echo "Failed to extract the required value from the JSON response."
  exit 1
fi

echo $c | bc -l | xargs printf "%.2f\n"
exit 0